package modules

import (
	"go.sia.tech/core/types"
	siad "go.sia.tech/siad/modules"
)

// Satellite implements the methods necessary to communicate both with the
// renters and the hosts.
type Satellite interface {
	siad.Alerter

	// ActiveHosts provides the list of hosts that the manager is selecting,
	// sorted by preference.
	ActiveHosts() ([]HostDBEntry, error)

	// AllHosts returns the full list of hosts known to the manager.
	AllHosts() ([]HostDBEntry, error)

	// Close safely shuts down the satellite.
	Close() error

	// EstimateHostScore will return the score for a host with the provided
	// settings, assuming perfect age and uptime adjustments.
	EstimateHostScore(HostDBEntry, Allowance) (HostScoreBreakdown, error)

	// Filter returns the hostdb's filterMode and filteredHosts.
	Filter() (FilterMode, map[string]types.PublicKey, []string, error)

	// SetFilterMode sets the hostdb's filter mode.
	SetFilterMode(FilterMode, []types.PublicKey, []string) error

	// Host provides the DB entry and score breakdown for the requested host.
	Host(types.PublicKey) (HostDBEntry, bool, error)

	// InitialScanComplete returns a boolean indicating if the initial scan of
	// the hostdb is completed.
	InitialScanComplete() (bool, uint64, error)

	// ScoreBreakdown will return the score for a host db entry using the
	// hostdb's weighting algorithm.
	ScoreBreakdown(HostDBEntry) (HostScoreBreakdown, error)

	// GetBalance retrieves the balance information on the account.
	GetBalance(string) (*UserBalance, error)
}

// ContractFormer is the minimal interface to be used by Provider.
type ContractFormer interface {
	RenewContracts(types.PublicKey, types.PrivateKey, Allowance, []types.FileContractID) ([]RenterContract, error)
	UpdateContract(types.FileContractRevision, []types.TransactionSignature, types.Currency, types.Currency, types.Currency) error
	GetRenter(types.PublicKey) (Renter, error)
	ContractsByRenter(types.PublicKey) []RenterContract
	OldContractsByRenter(types.PublicKey) []RenterContract
	WalletSeed() ([]byte, error)
	RenewedFrom(types.FileContractID) types.FileContractID
	FormContract(*RPCSession, types.PublicKey, types.PublicKey, types.PublicKey, uint64, uint64, uint64, uint64, uint64, uint64) (RenterContract, error)
	RenewContract(*RPCSession, types.PublicKey, types.FileContractID, uint64, uint64, uint64, uint64, uint64, uint64) (RenterContract, error)
}
